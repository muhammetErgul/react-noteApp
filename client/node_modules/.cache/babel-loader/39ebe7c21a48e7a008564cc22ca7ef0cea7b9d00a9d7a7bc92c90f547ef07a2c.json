{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const noteSlice = createSlice({\n  name: \"note\",\n  initialState: {\n    notes: []\n  },\n  reducers: {\n    addNote: (state, actions) => {\n      const item = state.notes.find(note => note.value === actions.payload.value);\n      if (item) {\n        return console.log(\"aynisindan var kardeş\");\n      } else {\n        state.notes.push(actions.payload);\n      }\n    }\n  }\n});\nexport const {\n  addNote,\n  setBgColor\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createSlice","noteSlice","name","initialState","notes","reducers","addNote","state","actions","item","find","note","value","payload","console","log","push","setBgColor","reducer"],"sources":["C:/Users/DELL/Desktop/react-notesApp/client/src/redux/NoteReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const noteSlice = createSlice({\r\n  name: \"note\",\r\n  initialState: {\r\n    notes: [],\r\n  },\r\n  reducers: {\r\n    addNote: (state, actions) => {\r\n      const item = state.notes.find(\r\n        (note) => note.value === actions.payload.value\r\n      );\r\n      if (item) {\r\n        return console.log(\"aynisindan var kardeş\");\r\n      } else {\r\n        state.notes.push(actions.payload);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addNote, setBgColor } = noteSlice.actions;\r\n\r\nexport default noteSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK;MAC3B,MAAMC,IAAI,GAAGF,KAAK,CAACH,KAAK,CAACM,IAAI,CAC1BC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKJ,OAAO,CAACK,OAAO,CAACD,KAC3C,CAAC;MACD,IAAIH,IAAI,EAAE;QACR,OAAOK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAC7C,CAAC,MAAM;QACLR,KAAK,CAACH,KAAK,CAACY,IAAI,CAACR,OAAO,CAACK,OAAO,CAAC;MACnC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,OAAO;EAAEW;AAAW,CAAC,GAAGhB,SAAS,CAACO,OAAO;AAExD,eAAeP,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}