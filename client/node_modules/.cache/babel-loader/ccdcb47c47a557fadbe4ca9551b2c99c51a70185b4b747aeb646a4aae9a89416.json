{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const noteSlice = createSlice({\n  name: \"note\",\n  initialState: {\n    notes: JSON.parse(localStorage.getItem(\"notes\")) || []\n  },\n  reducers: {\n    addNote: (state, actions) => {\n      const item = state.notes.find(note => note.value === actions.payload.value);\n      if (item) {\n        return console.log(\"aynisindan var kardeş\");\n      } else {\n        state.notes.push(actions.payload);\n        localStorage.setItem(\"notes\", JSON.stringify(state.notes));\n      }\n    },\n    searchNote: (state, actions) => {\n      const note = state.notes.filter(item => item.value.toLocaleLowerCase() === actions.payload);\n      if (note) {\n        state.notes = note;\n      } else {\n        return state.notes;\n      }\n    }\n  }\n});\nexport const {\n  addNote,\n  searchNote\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createSlice","noteSlice","name","initialState","notes","JSON","parse","localStorage","getItem","reducers","addNote","state","actions","item","find","note","value","payload","console","log","push","setItem","stringify","searchNote","filter","toLocaleLowerCase","reducer"],"sources":["C:/Users/DELL/Desktop/react-notesApp/client/src/redux/NoteReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const noteSlice = createSlice({\r\n  name: \"note\",\r\n  initialState: {\r\n    notes: JSON.parse(localStorage.getItem(\"notes\")) || [],\r\n  },\r\n  reducers: {\r\n    addNote: (state, actions) => {\r\n      const item = state.notes.find(\r\n        (note) => note.value === actions.payload.value\r\n      );\r\n      if (item) {\r\n        return console.log(\"aynisindan var kardeş\");\r\n      } else {\r\n        state.notes.push(actions.payload);\r\n        localStorage.setItem(\"notes\", JSON.stringify(state.notes));\r\n      }\r\n    },\r\n    searchNote: (state, actions) => {\r\n      const note = state.notes.filter(\r\n        (item) => item.value.toLocaleLowerCase() === actions.payload\r\n      );\r\n      if (note) {\r\n        state.notes = note;\r\n      } else {\r\n        return state.notes;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addNote, searchNote } = noteSlice.actions;\r\n\r\nexport default noteSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI;EACtD,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK;MAC3B,MAAMC,IAAI,GAAGF,KAAK,CAACP,KAAK,CAACU,IAAI,CAC1BC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKJ,OAAO,CAACK,OAAO,CAACD,KAC3C,CAAC;MACD,IAAIH,IAAI,EAAE;QACR,OAAOK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAC7C,CAAC,MAAM;QACLR,KAAK,CAACP,KAAK,CAACgB,IAAI,CAACR,OAAO,CAACK,OAAO,CAAC;QACjCV,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEhB,IAAI,CAACiB,SAAS,CAACX,KAAK,CAACP,KAAK,CAAC,CAAC;MAC5D;IACF,CAAC;IACDmB,UAAU,EAAEA,CAACZ,KAAK,EAAEC,OAAO,KAAK;MAC9B,MAAMG,IAAI,GAAGJ,KAAK,CAACP,KAAK,CAACoB,MAAM,CAC5BX,IAAI,IAAKA,IAAI,CAACG,KAAK,CAACS,iBAAiB,CAAC,CAAC,KAAKb,OAAO,CAACK,OACvD,CAAC;MACD,IAAIF,IAAI,EAAE;QACRJ,KAAK,CAACP,KAAK,GAAGW,IAAI;MACpB,CAAC,MAAM;QACL,OAAOJ,KAAK,CAACP,KAAK;MACpB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,OAAO;EAAEa;AAAW,CAAC,GAAGtB,SAAS,CAACW,OAAO;AAExD,eAAeX,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}