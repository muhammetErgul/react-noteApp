{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const noteSlice = createSlice({\n  name: \"note\",\n  initialState: {\n    notes: JSON.parse(localStorage.getItem(\"notes\")) || [],\n    search: \"\"\n  },\n  reducers: {\n    addNote: (state, actions) => {\n      const item = state.notes.find(note => note.value === actions.payload.value);\n      if (item) {\n        return console.log(\"aynisindan var kardeş\");\n      } else {\n        state.notes.push(actions.payload);\n        localStorage.setItem(\"notes\", JSON.stringify(state.notes));\n      }\n    },\n    searchNote: (state, actions) => {\n      state.search = actions.payload;\n    }\n  }\n});\nexport const filtered = state => {\n  return state.notes.notes.filter(item => item.value.toLocaleLowerCase().includes(state.notes.search));\n};\nexport const {\n  addNote,\n  searchNote\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createSlice","noteSlice","name","initialState","notes","JSON","parse","localStorage","getItem","search","reducers","addNote","state","actions","item","find","note","value","payload","console","log","push","setItem","stringify","searchNote","filtered","filter","toLocaleLowerCase","includes","reducer"],"sources":["C:/Users/DELL/Desktop/react-notesApp/client/src/redux/NoteReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const noteSlice = createSlice({\r\n  name: \"note\",\r\n  initialState: {\r\n    notes: JSON.parse(localStorage.getItem(\"notes\")) || [],\r\n    search: \"\",\r\n  },\r\n  reducers: {\r\n    addNote: (state, actions) => {\r\n      const item = state.notes.find(\r\n        (note) => note.value === actions.payload.value\r\n      );\r\n      if (item) {\r\n        return console.log(\"aynisindan var kardeş\");\r\n      } else {\r\n        state.notes.push(actions.payload);\r\n        localStorage.setItem(\"notes\", JSON.stringify(state.notes));\r\n      }\r\n    },\r\n    searchNote: (state, actions) => {\r\n      state.search = actions.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const filtered = (state) => {\r\n  return state.notes.notes.filter((item) =>\r\n    item.value.toLocaleLowerCase().includes(state.notes.search)\r\n  );\r\n};\r\n\r\nexport const { addNote, searchNote } = noteSlice.actions;\r\n\r\nexport default noteSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IACtDC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,OAAO,KAAK;MAC3B,MAAMC,IAAI,GAAGF,KAAK,CAACR,KAAK,CAACW,IAAI,CAC1BC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKJ,OAAO,CAACK,OAAO,CAACD,KAC3C,CAAC;MACD,IAAIH,IAAI,EAAE;QACR,OAAOK,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAC7C,CAAC,MAAM;QACLR,KAAK,CAACR,KAAK,CAACiB,IAAI,CAACR,OAAO,CAACK,OAAO,CAAC;QACjCX,YAAY,CAACe,OAAO,CAAC,OAAO,EAAEjB,IAAI,CAACkB,SAAS,CAACX,KAAK,CAACR,KAAK,CAAC,CAAC;MAC5D;IACF,CAAC;IACDoB,UAAU,EAAEA,CAACZ,KAAK,EAAEC,OAAO,KAAK;MAC9BD,KAAK,CAACH,MAAM,GAAGI,OAAO,CAACK,OAAO;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,QAAQ,GAAIb,KAAK,IAAK;EACjC,OAAOA,KAAK,CAACR,KAAK,CAACA,KAAK,CAACsB,MAAM,CAAEZ,IAAI,IACnCA,IAAI,CAACG,KAAK,CAACU,iBAAiB,CAAC,CAAC,CAACC,QAAQ,CAAChB,KAAK,CAACR,KAAK,CAACK,MAAM,CAC5D,CAAC;AACH,CAAC;AAED,OAAO,MAAM;EAAEE,OAAO;EAAEa;AAAW,CAAC,GAAGvB,SAAS,CAACY,OAAO;AAExD,eAAeZ,SAAS,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}